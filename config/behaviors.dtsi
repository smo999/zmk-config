   

    MAKE_HRM(hm, &kp, &kp, KEYS_L KEYS_R THUMBS)
    MAKE_HRM(hmr,&kp, &kp,  KEYS_L THUMBS)
    MAKE_HRM(hml,&kp, &kp,  KEYS_R THUMBS)

    MAKE_HRM(hrm_t, &kp, &ak_t,  KEYS_L THUMBS)
    MAKE_HRM(hrm_c, &kp, &ak_c,  KEYS_L THUMBS) 
    MAKE_HRM(hrm_h, &kp, &ak_h,  KEYS_R THUMBS)

    MAKE_LK(lk,    &kp,&kp)
    MAKE_LK(lk_qu, &kp, &Qu)
    MAKE_LK(lk_th, &tion, &Th)
    MAKE_LK(lk_sh, &sion, &Sh)
    MAKE_LK(lk_gh, &ght, &Gh)

    MAKE_SHIFT_MORPH(sk_shift_caps_word, &sk LSHIFT, &caps_word)
    MAKE_SHIFT_MORPH(CmmaSemi, &kp FR_COMMA, &kp FR_SEMICOLON)
    MAKE_SHIFT_MORPH(DotColn, &ak_dot, &kp FR_COLON)
    MAKE_SHIFT_MORPH(HashDllr, &kp FR_HASH, &kp FR_DLLR)
    MAKE_SHIFT_MORPH(MinusPlus, &kp FR_MINUS, &kp FR_PLUS)
    MAKE_SHIFT_MORPH(apos_quotes, &kp FR_APOS, &kp FR_DOUBLE_QUOTES)
    MAKE_SHIFT_MORPH(question_excl, &kp FR_QUESTION, &kp FR_EXCL)

    MAKE_SHIFT_MORPH(pair_par, &m_pair_par , &kp FR_LPAR)
    MAKE_SHIFT_MORPH(pair_brc, &m_pair_brc , &kp FR_LBRC)
    MAKE_SHIFT_MORPH(pair_bkt, &m_pair_bkt , &kp FR_LBKT)

    #define VIRG ,
    
    MAKE_AK(ak_x, &kp FR_X, <&kp FR_T> VIRG < &kp FR_B> VIRG < &kp FR_S>, <FR_G FR_M FR_W>)
    MAKE_AK(ak_w, &kp FR_W, <&kp FR_D> VIRG < &kp FR_P> VIRG < &kp FR_P>, <FR_G FR_M FR_X>)
    MAKE_AK(ak_m, &kp FR_M, <&kp FR_L> VIRG < &kp FR_L> VIRG < &kp FR_L> VIRG < &kp FR_L> VIRG < &kp FR_L>, <FR_G FR_X FR_P FR_B FR_W>)
    MAKE_AK(ak_g, &kp FR_G, <&kp FR_K>, <FR_C>)
    MAKE_AK(ak_t, &kp FR_T, <&kp FR_N>, <FR_K>)
    MAKE_AK(ak_c, &kp FR_C, <&kp FR_S>, <FR_B>)
    MAKE_AK(ak_k, &kp FR_K, <&nk>, <FR_T >)
    MAKE_AK(ak_b, &kp FR_B, <&kp FR_V>, <FR_D >)
    MAKE_AK(ak_p, &kp FR_P, <&kp FR_S> VIRG <&kp FR_W>, <FR_B FR_D>)
    MAKE_AK(ak_h, &kp FR_H, 
        <&kp FR_Y> VIRG < &kp FR_I> VIRG <&kp FR_O> VIRG < &kp FR_E> VIRG < &kp FR_U> VIRG < &kp FR_U> VIRG <&z>  VIRG <&v>  VIRG <&j>  VIRG <&bk_qu> VIRG <&k> , 
        <FR_A FR_U  FR_E FR_O FR_I FR_APOS FR_S FR_B FR_G FR_T FR_C>)
    
    MAKE_AK(ak_y, &kp FR_Y, <&kp FR_A>, <FR_F>)

    MAKE_AK(ak_comma, &CmmaSemi, <&cedilla> VIRG <&kp FR_Y>, <FR_C FR_APOS>)
    MAKE_AK(ak_dot, &kp FR_DOT, <&kp FR_O>, <FR_APOS>)
    MAKE_AK(ak_quest, &question_excl, <&kp FR_I>, <FR_APOS>)

    ZMK_STICKY_KEY(my_sl1,
        bindings = <&mo>;
        release-after-ms = <200>;
        quick-release;
    )

    ZMK_HOLD_TAP(space_delete,  
        tapping-term-ms = <my_tapping_term>;
        flavor = "balanced";
        hold-trigger-key-positions = <RT2 RM1 RM2 RM3>;
        hold-trigger-on-release; 
        bindings = <&m_select_and_delete>, <&kp>;
    )

    ZMK_HOLD_TAP(sltog,
        bindings = <&mo>, <&my_sl1>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    )

    ZMK_HOLD_TAP(skmo,
        bindings = <&mo>, <&sk>;
        tapping-term-ms = <200>;
        flavor = "balanced";
    )
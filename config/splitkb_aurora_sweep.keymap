/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_fr.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define SMB 1

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&sl { ignore-modifiers; };


&left_encoder {
    compatible = "alps,ec11";
    steps = <90>;
};

&right_encoder {
    compatible = "alps,ec11";
    steps = <90>;
};

&sensors {
    compatible = "zmk,keymap-sensors";
    sensors = <&left_encoder &right_encoder>;
    triggers-per-rotation = <30>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Enter {
            bindings = <&kp RETURN>;
            key-positions = <18 19>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        a-acute {
            bindings = <&kp FR_A_GRAVE>;
            key-positions = <10 0>;
            layers = <0>;
        };

        e-grave {
            bindings = <&kp FR_E_GRAVE>;
            key-positions = <12 2>;
            layers = <0>;
        };

        u-grave {
            bindings = <&kp FR_U_GRAVE>;
            key-positions = <4 14>;
            layers = <0>;
        };

        e-acute {
            bindings = <&kp FR_E_ACUTE>;
            key-positions = <12 22>;
            layers = <0>;
        };

        back_space_cb {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };

        Switch-layer {
            bindings = <&mo 4>;
            key-positions = <16 17 18 19>;
        };

        switch_sensors {
            bindings = <&mo 5>;
            key-positions = <10 11 12 13>;
        };
    };

    macros {
        delete_word: delete_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(LEFT)) &kp BACKSPACE>;
            label = "DELETE_WORD";
        };

        smart_space: smart_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FR_DOT &kp FR_SPACE &sk LEFT_SHIFT>;
            label = "SMART_SPACE";
        };
    };

    behaviors {
        dot_colon: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COLON";
            bindings = <&kp FR_DOT>, <&kp FR_COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        comma_semicolon: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_SEMICOLON";
            bindings = <&kp FR_COMMA>, <&kp FR_SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        pars: pars {
            compatible = "zmk,behavior-mod-morph";
            label = "PARS";
            bindings = <&kp FR_LEFT_PARENTHESIS>, <&kp FR_RIGHT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        brackets: brackets {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACKETS";
            bindings = <&kp FR_LEFT_BRACKET>, <&kp FR_RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        braces: braces {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACES";
            bindings = <&kp FR_LEFT_BRACE>, <&kp FR_RIGHT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        less_greater_than: less_greater_than {
            compatible = "zmk,behavior-mod-morph";
            label = "LESS_GREATER_THAN";
            bindings = <&kp FR_LESS_THAN>, <&kp FR_GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        grave_hat: grave_hat {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_HAT";
            bindings = <&kp FR_GRAVE>, <&kp FR_CARET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        sltog: sltog {
            compatible = "zmk,behavior-hold-tap";
            label = "SLTOG";
            bindings = <&mo>, <&symbol_options>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        tri_space: tri_space {
            compatible = "zmk,behavior-hold-tap";
            label = "TRI_SPACE";
            bindings = <&mo>, <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <16 17 18 7>;
        };

        stkp: stkp {
            compatible = "zmk,behavior-hold-tap";
            label = "STKP";
            bindings = <&kp>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        symbol_options: symbol_options {
            compatible = "zmk,behavior-mod-morph";
            label = "SYMBOL_OPTIONS";
            bindings = <&sl 1>, <&to 1>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        slmo: slmo {
            compatible = "zmk,behavior-hold-tap";
            label = "SLMO";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        sl_backspace: sl_backspace {
            compatible = "zmk,behavior-hold-tap";
            label = "SL_BACKSPACE";
            bindings = <&mo>, <&delete_word>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        question_excl: question_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "QUESTION_EXCL";
            bindings = <&kp FR_QUESTION>, <&kp FR_EXCL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        minusunderscore: minusunderscore {
            compatible = "zmk,behavior-mod-morph";
            label = "MINUSUNDERSCORE";
            bindings = <&kp FR_MINUS>, <&kp FR_UNDERSCORE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        Fslashpipe: Fslashpipe {
            compatible = "zmk,behavior-mod-morph";
            label = "FSLASHPIPE";
            bindings = <&kp FR_BACKSLASH>, <&kp FR_PIPE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        apos_quotes: apos_quotes {
            compatible = "zmk,behavior-mod-morph";
            label = "APOS_QUOTES";
            bindings = <&kp FR_APOS>, <&kp FR_DOUBLE_QUOTES>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&grave_hat       &comma_semicolon             &dot_colon       &kp FR_P       &kp FR_Y    &kp FR_F  &kp FR_G       &kp FR_C         &kp FR_R       &kp FR_L
&mt LCTRL FR_A   &mt LALT FR_O                &mt LSHIFT FR_E  &mt LGUI FR_I  &kp FR_U    &kp FR_D  &mt RGUI FR_H  &mt RSHIFT FR_T  &mt RALT FR_N  &mt RCTRL FR_S
&apos_quotes     &kp FR_Q                     &kp FR_J         &kp FR_K       &kp FR_X    &kp FR_B  &kp FR_M       &kp FR_W         &kp FR_V       &kp FR_Z
&lt 3 BACKSPACE  &stkp LEFT_SHIFT LEFT_SHIFT                                                                                        &sltog 1 1     &lt 3 SPACE
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT_ARROW>, <&inc_dec_kp A B>;
        };

        Symbols {
            bindings = <
&kp FR_LESS_THAN  &brackets       &braces           &pars        &none            &kp FR_COMMA  &kp FR_N7  &kp FR_N8  &kp FR_N9  &kp FR_STAR
&kp FR_AT         &question_excl  &minusunderscore  &kp FR_FSLH  &Fslashpipe      &kp FR_DOT    &kp FR_N4  &kp FR_N5  &kp FR_N6  &kp FR_PLUS
&kp FR_AMPS       &kp FR_PERCENT  &kp FR_EQUAL      &kp FR_HASH  &kp FR_DOLLAR    &kp FR_N0     &kp FR_N1  &kp FR_N2  &kp FR_N3  &kp FR_FSLH
&trans            &trans                                                                                              &to 0      &trans
            >;
        };

        Symbols2 {
            bindings = <
&kp FR_GREATER_THAN  &kp FR_RBKT  &kp FR_RBRC   &kp FR_RPAR  &trans    &trans  &trans  &trans  &trans  &trans
&trans               &kp FR_EXCL  &kp FR_UNDER  &kp FR_PIPE  &trans    &trans  &trans  &trans  &trans  &trans
&trans               &trans       &kp FR_PLUS   &trans       &trans    &trans  &trans  &trans  &trans  &trans
&trans               &trans                                                                    &trans  &trans
            >;
        };

        Nav {
            bindings = <
&kp ESCAPE    &trans        &trans        &trans        &trans              &trans  &trans    &kp UP    &trans     &trans
&kp TAB       &trans        &trans        &trans        &trans              &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &kp ENTER
&kp LG(FR_Z)  &kp LG(FR_X)  &kp LG(FR_C)  &kp LG(FR_V)  &kp LS(LG(FR_V))    &trans  &trans    &trans    &trans     &to 4
&trans        &trans                                                                                    &trans     &kp RETURN
            >;
        };

        Config {
            bindings = <
&bootloader  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3    &trans  &kp C_BRI_DEC  &kp C_BRI_UP  &trans  &trans
&trans       &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3     &trans  &trans         &trans        &trans  &trans
&trans       &bt BT_CLR     &trans         &trans         &trans           &trans  &trans         &trans        &trans  &trans
&trans       &to 0                                                                                              &to 0   &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans                                                    &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp RIGHT_ARROW LEFT_ARROW>;
        };
    };
};
